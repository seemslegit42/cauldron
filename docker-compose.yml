version: '3.8'

services:
  # Example: PostgreSQL Database (matches setup_frappe.sh DB_HOST)
  postgres:
    image: postgres:15 # Use a version compatible with Frappe/ERPNext
    container_name: cauldron-postgres
    environment:
      # IMPORTANT: Set this via Codespaces secrets / .env file
      POSTGRES_PASSWORD: ${DB_ROOT_PASSWORD:-please_change_in_env}
      # Add other PG settings if needed
      # POSTGRES_DB: cauldron # DB name is set by `bench new-site`
      # POSTGRES_USER: cauldron_user # User might be created by bench or use default postgres user
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Expose port only if direct access from host machine is needed, otherwise keep internal
    # ports:
    #   - "5432:5432"
    networks:
      - cauldron-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Example: Redis (needed by Frappe)
  redis-cache: # Renamed to avoid conflict if system redis is installed
    image: redis:7-alpine
    container_name: cauldron-redis-cache
    networks:
      - cauldron-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Example: Redis Queue (Often recommended to separate cache and queue)
  redis-queue:
    image: redis:7-alpine
    container_name: cauldron-redis-queue
    networks:
      - cauldron-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Add other services below ---
  # Example: Kafka (Complex - consider managed service or RabbitMQ for simplicity)
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: cauldron-zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   networks:
  #     - cauldron-net
  #   restart: unless-stopped

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: cauldron-kafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092" # Internal port
  #     # - "29092:29092" # Optional: External port if needed
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT #,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 #,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     # Add other Kafka settings
  #   networks:
  #     - cauldron-net
  #   restart: unless-stopped

  # Example: RabbitMQ (Simpler alternative for EDA)
  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: cauldron-rabbitmq
  #   ports:
  #     - "5672:5672"  # AMQP port
  #     - "15672:15672" # Management UI port
  #   environment:
  #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
  #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq/
  #   networks:
  #     - cauldron-net
  #   restart: unless-stopped

  # Example: Qdrant (Vector DB - if self-hosting)
  # qdrant:
  #   image: qdrant/qdrant:latest
  #   container_name: cauldron-qdrant
  #   ports:
  #     - "6333:6333" # REST API
  #     - "6334:6334" # gRPC
  #   volumes:
  #     - qdrant_data:/qdrant/storage
  #   networks:
  #     - cauldron-net
  #   restart: unless-stopped

  # Example: TimescaleDB (Time-Series DB - if self-hosting)
  # timescaledb:
  #   image: timescale/timescaledb:latest-pg15
  #   container_name: cauldron-timescaledb
  #   environment:
  #     POSTGRES_PASSWORD: ${TIMESCALE_PASSWORD:-please_change_in_env}
  #   volumes:
  #     - timescaledb_data:/var/lib/postgresql/data
  #   networks:
  #     - cauldron-net
  #   restart: unless-stopped

  # Add other services: API Gateway (Kong/Traefik?), Backstage, n8n?

volumes:
  postgres_data:
    driver: local
  # rabbitmq_data: # Uncomment if using RabbitMQ volume
  #   driver: local
  # qdrant_data: # Uncomment if using Qdrant volume
  #   driver: local
  # timescaledb_data: # Uncomment if using TimescaleDB volume
  #   driver: local

networks:
  cauldron-net:
    driver: bridge
